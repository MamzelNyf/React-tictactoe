{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","squares","renderSquare","React","Component","Game","_this2","Object","_Users_mamzelnyf_Web_Projects_React_Projects_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_mamzelnyf_Web_Projects_React_Projects_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_mamzelnyf_Web_Projects_React_Projects_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","_lines$i","_Users_mamzelnyf_Web_Projects_React_Projects_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7700161.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n//class Square extends React.Component {\r\n   // render() {\r\n    //  return (\r\n        //////replace onClick={function() {alert('click');}} by onClick={() => alert('click');} to create a fonction\r\n     //   <button \r\n     //     className=\"square\" \r\n          ////////By calling this.setState from an onClick handler in the Square’s render method, we tell React to re-render that Square whenever its <button> is clicked\r\n          ////////onClick={() => this.setState({value: 'X'})}\r\n          ////////state is considered to be private to a component that defines it, we cannot update the Board’s state directly from Square.\r\n          ////////The DOM <button> element’s onClick attribute has a special meaning to React because it is a built-in component.\r\n      //   onClick={() => this.props.onClick()} //React will call the onClick event handler that is defined in Square’s render() method.\r\n      //  >\r\n      //   {this.props.value}\r\n      //  </button>\r\n      //);\r\n    //}\r\n  //}\r\n\r\n  //Instead of defining a class which extends React.Component, we can write a function that takes props as input and returns\r\n  function Square(props){\r\n    return(\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  class Board extends React.Component {\r\n    // constructor(props){\r\n    //   super(props);\r\n    //   //Board’s initial state to contain an array of 9 nulls corresponding to the 9 squares\r\n    //   this.state = {\r\n    //     squares: Array(9).fill(null),\r\n    //     xIsNext: true,\r\n    //   };\r\n    // }//delete the constructor to handle history\r\n    \r\n    renderSquare(i) {\r\n      //pass a prop called value to the Square:\r\n      //return <Square value={i} />;\r\n\r\n      //now we modify the Board’s renderSquare method to read from squares array\r\n      return ( // We split the returned element into multiple lines for readability and added parentheses so that JavaScript doesn’t insert a semicolon after return and break our code.\r\n        <Square \r\n          value={this.props.squares[i]} \r\n          //Square call that function when a square is clicked\r\n          onClick={() => this.props.onClick(i)} // Square calls function this.handleClick(i) when clicked.\r\n        //In React, it’s conventional to use on[Event] names for props which represent events and handle[Event] for the methods which handle the events.\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    //set up the initial state for the Game component within its constructor:\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n      };\r\n    }\r\n\r\n    handleClick(i){\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : '0';\r\n      this.setState({\r\n        history: history.concat([{\r\n        squares: squares\r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext,\r\n      });\r\n    }\r\n\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n    }\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      const moves = history.map((step, move) =>{\r\n        const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n      let status;\r\n      if(winner){\r\n        status ='Winner: '+ winner;\r\n      }else{\r\n      status = 'Next player: '+ (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              squares={current.squares}\r\n              onClick={i=> this.handleClick(i)}\r\n            />\r\n\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{ status }</div>\r\n            <ol>{ moves }</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }"],"sourceRoot":""}